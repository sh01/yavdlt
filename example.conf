#### Intro
# This is a sample config file for Yet Another Video Download Tool.
# The base syntax is python 3.x.
# To use this config file by default, copy it to ~/.yavdlt/config and edit it to your preferences.

#### Log level
#
# You can set a global log level for YAVDTL here, if the default is too chatty for you.
#   loglevel = 30 # Limit output to error messages
loglevel = 15

#### Video format preference
# You can tell YAVDTL which YT video formats you prefer. At the time of writing, the list is as follows, in order of increasing
# quality:
#
# 17: mp4  / MPEG-4 Part 2 (176x144)
#  5: flv  / FLV1 (400x226)
# 18: mp4  / H264 (480x360)
# 34: flv  / H264 (640x360)
# 35: flv  / H264 (854x480)
# 43: webm / VP8  (854x480)
# 22: mp4  / H264 (1280x720)
# 45: webm / VP8  (1280x720)
# 37: mp4  / h264 (1920x1080)
# 38: mp4  / h264 (up to 4096x2304)
#
# For more detailed and recent info, see <http://en.wikipedia.org/wiki/Youtube#Quality_and_codecs>.
# There's also the special value FMT_DEFAULT representing the YT default format, which is typically some low-res FLV thing.
# 
# Note that at the time of writing support for the VP8 codec is uncommon in media players; you might want to avoid the webm
# formats for that reason unless you're sure you want those in particular.
# Fmt 38 videos tend to come in extreme sizes and resolutions and thereby put massive demands on your hardware even for local
# playback; their use isn't recommended for most purposes.
#
# Format choice by YAVDTL is governed by format preference lists; you can add as many as you like here, and also choose one
# of them to act as a default.
# The syntax is as follows:
#   add_format_preflist('preflist_name', (fmt1, fmt2, ...), default=True) # for a default preflist
#   add_format_preflist('preflist_name', (fmt2, fmt2, ...))               # for others


# Add some sane default preflist.
add_format_preflist('default', (22, 35, 34, 18, 5, FMT_DEFAULT), default=True)

# Try for some nice high-res videos, but don't go in for the 4k insanity.
add_format_preflist('hd', (37, 22, 35, 34, 18, 5, FMT_DEFAULT))

# Quality at any cost!
add_format_preflist('maxquality', (38, 37, 22, 35, 34, 18, 5, FMT_DEFAULT))

# Get some webm videos, and don't accept any substitutes.
add_format_preflist('webm', (43, 45))


#### URL manglers
# URL manglers are used to preprocess YT request urls; this can e.g. be used to tunnel requests through http gateways.
# You can add a custom URL mangler as follows:
# 
#   @url_mapper_reg('my_mangler_name')
#   def my_url_mangler(url_in):
#      # ... Do something to compute url_out here ...
#      return url_out
#
# A convenience function is provided for easier construction of URL manglers for phpproxy gateways; you can add a phpproxy
# gateway that accepts request of the form http://example.org/index.php?q=<base64-querystring) by simply executing
#    make_urlmangler_phpproxy_base64('my_mangler_name', 'http://example.org/')
# .
# Afterwards, you can choose this mangler at runtime using the cmdline switch '--url-mangler my_mangler_name'.

#### Default URL mangler
# You can set a default mangler by assigning a name or callable to the 'url_mangler' variable:
#    url_mangler = my_url_mangler    # This works, if you've defined it above
#    url_mangler = 'my_mangler_name' # And so does this
#
# Otherwise, no URL mangling will be performed by default.

